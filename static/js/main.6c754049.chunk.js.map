{"version":3,"sources":["components/Nav.js","components/Comment.js","components/Comments.js","components/BlogPostTitle.js","components/BlogPost.js","config/api.js","services/blogPostsServices.js","components/BlogPosts.js","components/Title.js","components/About.js","components/NotFound.js","components/SignIn.js","services/authServices.js","components/RegisterUser.js","config/stateReducer.js","components/NewBlogPost.js","components/App.js","index.js"],"names":["Nav","props","hideMenu","setActive","useState","active","loggedInUser","color","fixed","Brand","Item","renderAs","Burger","onClick","Menu","Container","position","to","className","Comment","comment","username","content","Comments","comments","showAddComment","notification","map","key","_id","BlogPostTitle","title","showEditDelete","BlogPost","blogPost","singlePost","category","axios","create","baseURL","process","EXPRESS_URI","timeout","withCredentials","getAllBlogPosts","a","api","get","response","data","console","log","addBlogPost","postInfo","newPost","create_date","date","modified_date","post","haveSinglePost","posts","Object","keys","length","BlogPosts","match","location","blogPosts","id","params","queryObj","qs","parse","search","ignoreQueryPrefix","filter","getBlogPost","haveQueryParameters","filters","filteredPosts","attr","getFilteredBlogPosts","Title","alt","src","About","NotFound","SignIn","handleLogin","loginError","onSubmit","event","type","name","placeholder","required","value","userInfo","error","status","RegisterUser","registerError","setRegisterError","preventDefault","form","target","registerUser","elements","email","password","then","history","push","catch","state","action","NewBlogPost","addNewBlogPost","App","setLoggedInUser","user","localStorage","setItem","removeItem","loginUser","dispatchLoggedInUser","dispatchLoginError","handleLogout","logoutUser","Date","dispatchBlogPosts","useReducer","stateReducer","useEffect","allPosts","userAuthenticated","getItem","basename","exact","path","render","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6c754049.chunk.js","sourcesContent":["import React, { Fragment, useState } from \"react\"\nimport { NavLink } from \"react-router-dom\"\nimport { Navbar } from \"react-bulma-components\"\n\n// The Nav component renders the nav bar at the top of the page\n// It is a class component because it requires state to manage the hamburger menu toggle\nconst Nav = (props) => {\n\n    // forces a state change to hide the hamburger menu\n    function hideMenu() {\n        setActive(false)\n    }\n\n    function navLoggedIn() {\n        return (\n            <Fragment>\n            \n                <Navbar.Container position=\"start\">\n                    <NavLink to=\"/auth/logout\" className=\"navbar-item\" onClick={hideMenu}>Logout</NavLink>\n                </Navbar.Container>\n                <Navbar.Container position=\"end\">\n                    \n                        <NavLink to=\"/posts/new\" className=\"navbar-item\" onClick={hideMenu}>Add Post</NavLink>\n                        <NavLink to=\"#\" className=\"navbar-item\" onClick={hideMenu}>Categories</NavLink>\n                        <NavLink to=\"/about\" className=\"navbar-item\" onClick={hideMenu}>About</NavLink>\n                        <NavLink to=\"/\" className=\"navbar-item\" onClick={hideMenu}>Home</NavLink>\n                        <NavLink to={`/posts?username=${loggedInUser}`} className=\"navbar-item\" onClick={hideMenu}>\n                            My Blog\n                        </NavLink>\n                   \n                </Navbar.Container>\n            \n            </Fragment>\n        )\n    }\n    \n    function navLoggedOut() {\n        return (\n            <Fragment>\n                <Navbar.Container position=\"start\">\n                    <NavLink to=\"/auth/login\" className=\"navbar-item\" onClick={hideMenu}>Login</NavLink>\n                    <NavLink to=\"/auth/register\" className=\"navbar-item\" onClick={hideMenu}>Register</NavLink>\n                </Navbar.Container>\n                <Navbar.Container position=\"end\">\n                    <NavLink to=\"#\" className=\"navbar-item\" onClick={hideMenu}>Categories</NavLink>\n                    <NavLink to=\"/about\" className=\"navbar-item\" onClick={hideMenu}>About</NavLink>\n                    <NavLink to=\"/\" className=\"navbar-item\" onClick={hideMenu}>Home</NavLink>\n                </Navbar.Container>\n            </Fragment>\n        )\n    }\n    \n\n    const [active, setActive] = useState(false)\n    const {loggedInUser} = props\n\n    return (\n        // active is stored in state, and used to toggle the hamburger menu  \n        <Navbar color=\"info\" fixed=\"top\"  active={active}>\n            <Navbar.Brand>\n                <Navbar.Item renderAs=\"p\">{loggedInUser || \"guest\"}</Navbar.Item>\n                <Navbar.Burger onClick={() => {setActive(!active)}} />\n            </Navbar.Brand>\n            <Navbar.Menu>\n                {/* Render the relevant NavLinks depending on whether or not a user is logged in  */}\n                {loggedInUser ? navLoggedIn() : navLoggedOut()}\n            </Navbar.Menu>\n        </Navbar>\n        \n    )\n}\nexport default Nav","import React from \"react\"\n\nconst Comment = props => {\n\tconst { comment } = props\n\tconst { username, content } = comment\n\n\treturn (\n\t\t<div className=\"content\">\n\t\t\t<p>{username}</p>\n\t\t\t<p>{content}</p>\n\t\t</div>\n\t)\n}\n\nexport default Comment","import React from \"react\"\nimport { Heading, Button } from \"react-bulma-components\"\nimport Comment from \"./Comment\"\n\nconst Comments = props => {\n\tconst { comments, showAddComment} = props\n\t\n\treturn (\n\t\t<div >\t\t\n            <div className=\"level\">\n                <Heading className=\"level-left\">Comments</Heading>\n                {showAddComment && (<Button className=\"level-right\" notification=\"true\" color=\"info\">Add Comment</Button>)}\n            </div>\t\n            {comments.map(comment => (                                    \n                <Comment key={comment._id} comment={comment} />                                    \n            ))}        \n\t\t</div>\n\t)\n}\n\nexport default Comments","import React from \"react\"\nimport {Heading, Button} from \"react-bulma-components\"\n\nconst BlogPostTitle = props => {\n    const {title, showEditDelete} = props\n    return (\n        <div>\n        <Heading>{title}</Heading>\n        {showEditDelete && (\n            <div className=\"level-right\">\n            <Button className=\"add-margin\" color=\"info\">Edit</Button>\n            <Button className=\"add-margin\" color=\"info\">Delete</Button>\n            </div>\n        )}\n        </div>\n    )\n}\n\nexport default BlogPostTitle","import React, {Fragment} from \"react\"\nimport {Link} from \"react-router-dom\"\nimport { Section } from \"react-bulma-components\"\nimport Comments from \"./Comments\"\nimport BlogPostTitle from \"./BlogPostTitle\"\n\n\nconst BlogPost = props => {\n\tconst { blogPost, loggedInUser, singlePost} = props\n    const { title, username, content, category, comments, _id } = blogPost\n    const showAddComment = username !== loggedInUser\n    const showEditDelete = !showAddComment && singlePost\n\t\n\treturn (\n        <Fragment>\n            <Section className=\"content\">\n                    <Link to={`/posts/${_id}`}>\n                        <BlogPostTitle title={title} showEditDelete={showEditDelete} />\n                    </Link>\n                    <p>{username}</p>\n                    {category && <p>Category: {category}</p>}\n                    <p>{content}</p>\n            </Section>\n            {/* Display comments if we are showing a single blog post */}\n            {singlePost && (\n                <Section className=\"content\" >\n                    <Comments comments={comments} showAddComment={showAddComment} />\t\t\t\t\t\t\n                </Section>\n            )}\n        </Fragment>\n\t)\n}\n\nexport default BlogPost","import axios from 'axios'\n\n// Create an axios instance\nexport default axios.create({\n  baseURL: process.env.EXPRESS_URI || 'https://limitless-lowlands-34451.herokuapp.com/',\n  timeout: 5000,\n  withCredentials: true\n})","import api from \"../config/api\"\n\n// Returns a single blog post with the specified id\nexport const getBlogPost = (blogPosts, id) => {\n    return blogPosts.filter(post => post._id == id)\n}\n\n// Gets all blog posts from the server\nexport const getAllBlogPosts = async () => {\n    try {\n        const response = await api.get(\"/posts\")\n        return response.data\n    } catch (error) {\n        console.log(\"got an error from the server fetching blog posts:\", error)\n        throw(error)\n    }\n}\n\n// Returns blog posts filtered by specified attributes\nexport const getFilteredBlogPosts = (blogPosts, filters) => {\n    let filteredPosts = blogPosts\n    for(let attr of Object.keys(filters)) {\n        filteredPosts = filteredPosts.filter((post) => post[attr] === filters[attr])\n    }\n    return filteredPosts\n}\n\n// Adds a new blog post to the database\nexport const addBlogPost = async (postInfo) => {\n    // call to server to add new post\n    // will return the new post\n    const newPost = {\n        title: postInfo.title,\n        username: postInfo.username,\n        create_date: postInfo.date,\n        modified_date: postInfo.date,\n        category: postInfo.category,\n        content: postInfo.content,\n        comments: []\n    };\n    try {\n        const response = await api.post(\"/posts\", newPost)\n        return response.data\n    }\n    catch (error) {\n        console.log(\"Error adding blog post:\", error)\n        throw(error)\n    }\n}\n\n// export const deleteBlogPost = async (id) => {\n//     try {\n//         const response = await api.delete(\"/posts/\"+id)\n//         return response.data\n//     }\n//     catch (error) {\n//         console.log(\"Error delete blod post\", error)\n//         throw(error)\n//     }\n// }","import React from \"react\"\nimport qs from \"qs\"\nimport BlogPost from \"./BlogPost\"\nimport { getBlogPost, getFilteredBlogPosts, deleteBlogPost } from \"../services/blogPostsServices\"\n\nfunction haveQueryParameters(queryObj) {\n\treturn Object.keys(queryObj).length > 0\n}\n\nfunction haveSinglePost(posts) {\n\treturn Object.keys(posts).length === 1\n}\n\n// function handleDelete (event, id) {\n// \tevent.preventDefault()\n// \tdeleteBlogPost(id).then() {\n// \t\tprops.history.push(\"/post\")\n// \t}\n// \t.catch((error) => {\t\t\t\t\n// \t\tconsole.log(`An error occurred adding the post: ${error}`)\n\t\t\n// \t})\n\n// }\n\nconst BlogPosts = ({match, location, blogPosts,loggedInUser}) => {\n\n\tconst id = match.params.id\n\tconst queryObj = qs.parse(location.search, { ignoreQueryPrefix: true })\n\t\n\t// Unless we are retrieving a single post, posts is all blogPosts (retrieved in App)\n\tlet posts = blogPosts\n\t// If we have a post id, we only want to display the single post\n\tif(id) {\n\t\tposts = getBlogPost(blogPosts, id)\n\t}\n\n\t// If we have a query string, filter the blogPosts\n\tif(haveQueryParameters(queryObj)) {\n\t\tposts = getFilteredBlogPosts(posts, queryObj)\n\t}\n\t\n\treturn (\n\t\t<div>\n\t\t{posts.map(post => (\n\t\t\t<BlogPost  key={post._id} blogPost={post} singlePost={haveSinglePost(posts)} loggedInUser={loggedInUser}/>\t\t\t\t\t\t\t\t\n\t\t))}\n\t\t</div>\n\t)\n\t\n}\n\nexport default BlogPosts","import React from \"react\"\nimport { Heading } from \"react-bulma-components\"\n\nexport default function Title() {\n\treturn (\n\t\t<div className=\"level\">\n\t\t\t<Heading>Many mumbling mice</Heading>\n\t\t\t<img alt=\"Four little cartoon mice\" className=\"mice\" src=\"/mice.png\" />\n\t\t</div>\n\t)\n}\n","import React from 'react';\nimport { Heading, Section } from \"react-bulma-components\"\nconst About = () => (\n  <Section className=\"content\">\n    <Heading>About</Heading>\n    <p>This is our blog client. Here, we will read, write, update and delete posts while we are connected to an Express Server and a Mongo database. User authentication is provided as well.</p>\n  </Section>\n);\nexport default About;","import React from 'react';\nimport { Heading, Section } from \"react-bulma-components\"\nconst NotFound = () => (\n  <Section className=\"content\">\n    <Heading>OOOOOPSSS... Page Not Found</Heading>\n    <p>Try with another link ;)</p>\n  </Section>\n);\nexport default NotFound;","import React from \"react\"\n\nconst SignIn = props => {\n\tconst { handleLogin, loginError } = props\n\n\tfunction loginUser(event) {\n\t\thandleLogin(event,props)\n\t}\n\n\treturn (\n\t\t<form onSubmit={loginUser}>\n\t\t\t{ loginError && <p className=\"has-text-danger\">{ loginError }</p> }\n\t\t\t<label className=\"label\">Username</label>\n\t\t\t<input type=\"text\" className=\"input\" name=\"username\" placeholder=\"Username\" required></input>\n\t\t\t<label className=\"label\">Password</label>\n\t\t\t<input type=\"password\" className=\"input\" name=\"password\" placeholder=\"Password\" required></input>\n\t\t\t<input type=\"submit\" value=\"Login\" className=\"button is-info\"></input>\n\t\t</form>\n\t)\n}\n\nexport default SignIn\n","import api from \"../config/api\"\n\nexport async function registerUser(userInfo) {\n    // call to server to register user\n    try {\n        const response = await api.post(\"/auth/register\", userInfo)\n        console.log(\"got user back from server\", response)\n        return response.data\n    }\n    catch (error) { \n        console.log(\"got error\", error)\n        throw(error)\n    }\n}\n\nexport async function loginUser(userInfo) {\n    // call to server to login user\n    // return user info if successful and error if not\n    try {\n        const response = await api.post(\"/auth/login\", userInfo)\n        console.log(\"got user back from server\", response) \n        return response.data\n    }\n    catch(error){\n        console.log(\"got error\", error)\n        throw(error)\n    }\n}\n\nexport async function logoutUser() {\n    // call to server to logout user\n    try {\n        return api.get(\"/auth/logout\")\n    }\n    catch (error) {\n        console.log(\"an error occurred logging out\", error)\n        throw(error)\n    }\n}\n\nexport async function userAuthenticated() {\n    try {\n        const response =  await api.get(\"/auth/user\")\n        return response\n    }\n    catch(error) {\n        console.log(\"an error occurred checking for authenticated user\")\n        return {error: error, status: error.response.status}\n    }\n}","import React, {useState} from \"react\"\nimport {registerUser} from \"../services/authServices\"\n\nconst RegisterUser = (props) => {\n\n\tconst [registerError, setRegisterError] = useState(null)\n\tfunction handleRegister(event) {\n\t\tevent.preventDefault()\n\t\tconst form = event.target\n\t\tconst username = form.elements.username.value\n\t\tconst email = form.elements.email.value\n\t\tconst password = form.elements.password.value\n\t\t\n\t\tregisterUser({username: username, email: email, password: password}).then((response) => {\n\t\t\tconsole.log(\"got response from register user on server:\", response)\n\t\t\tprops.history.push(\"/auth/login\")\n\t\t}).catch((error) => {\n\t\t\tconst status = error.response ? error.response.status : 500\n\t\t\tif(status === 409) {\n\t\t\t\t// This username is already registered. Let the user know.\n\t\t\t\tsetRegisterError(\"This username already exists. Please login, or specify another username.\")\t\t\t\t\n\t\t\t}\n\t\t\tconsole.log(`registration failed with error: ${error} and status ${status}`)\n\t\t})\t\t\n\t}\n\n\treturn (\n\t\t<form onSubmit={handleRegister}>\n\t\t{ registerError && <p className=\"has-text-danger\">{ registerError }</p> }\n\n\t\t\t<label className=\"label\">Username</label>\n\t\t\t<input type=\"text\" className=\"input\" name=\"username\" placeholder=\"Username\" required></input>\n            <label className=\"label\">Email address</label>\n\t\t\t<input type=\"email\" className=\"input\" name=\"email\" placeholder=\"Email\" required></input>\n\t\t\t<label className=\"label\">Password</label>\n\t\t\t<input type=\"password\" className=\"input\" name=\"password\" placeholder=\"Password\" required></input>\n\t\t\t<input type=\"submit\" value=\"Register\" className=\"button is-info\"></input>\n\t\t</form>\n\t)\n}\n\nexport default RegisterUser","export default function (state, action) {\n    switch(action.type) {\n        case \"setLoggedInUser\": {\n            return action.data            \n        }\n        case \"setBlogPosts\": {\n            return action.data\n        }\n        case \"setLoginError\": {\n            return action.data            \n        }\n        default: \n            return state\n    }\n}","import React from \"react\"\n\nconst NewBlogPost = (props) => {\n\n    const {addNewBlogPost} = props\n\n    // Pass props with history back to callback function so we can redirect\n    function addBlogPost(event) {\n        addNewBlogPost(event,props)\n    }\n\n    return (\n\t\t<form onSubmit={addBlogPost}>\n\t\t\t<label className=\"label\">Title</label>\n\t\t\t<input type=\"text\" className=\"input\" name=\"title\" placeholder=\"Title\" required></input>\n            <label className=\"label\">Category</label>\n\t\t\t<input type=\"text\" className=\"input\" name=\"category\" placeholder=\"Category (optional)\"></input>\n\t\t\t<label className=\"label\">Content</label>\n\t\t\t<textarea className=\"input\" name=\"content\" placeholder=\"What's on your mind?\" required></textarea>\n\t\t\t<input type=\"submit\" value=\"Create Post\" className=\"button is-info\"></input>\n\t\t</form>\n\t)\n\n}\n\nexport default NewBlogPost","import React,{ useReducer, useEffect} from \"react\"\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom'\nimport Nav from \"./Nav\"\nimport BlogPosts from \"./BlogPosts\"\nimport Title from \"./Title\"\nimport About from \"./About\"\nimport NotFound from \"./NotFound\"\nimport SignIn from \"./SignIn\"\nimport RegisterUser from \"./RegisterUser\"\nimport stateReducer from \"../config/stateReducer\"\nimport { getAllBlogPosts,addBlogPost } from \"../services/blogPostsServices\"\nimport { loginUser, logoutUser, userAuthenticated } from \"../services/authServices\"\nimport NewBlogPost from \"./NewBlogPost\"\n\n\nconst App = () => {\n\n\t// Get loggedInUser from localStorage\n\tfunction getLoggedInUser() {\n\t\treturn localStorage.getItem(\"loggedInUser\")\n\t}\n\n\t// Store loggedInUser username in local storage\n\tfunction setLoggedInUser(user) {\n\t\tuser ? localStorage.setItem(\"loggedInUser\", user) : localStorage.removeItem(\"loggedInUser\")\n\t}\n\n\t// handles login\n\t// TODO: refactor to function as callback passed to SignIn form component\n\t// \t- get username and password from form event\n\t//\t- authenticate with express server\n\t// \t- update loginError in state if there is one and re-render SignIn form component\n\t//\t- update loggedInUser if successful (and save to local storage)\n\tfunction handleLogin(event, props) {\n\t\tevent.preventDefault()\n\t\tconst form = event.target\n\t\tconst username = form.elements.username.value\n\t\tconst password = form.elements.password.value\n\n\t\tloginUser({username: username, password: password}).then(() => {\n\t\t\tdispatchLoggedInUser({\n\t\t\t\ttype: \"setLoggedInUser\",\n\t\t\t\tdata: username\n\t\t\t})\n\t\t\tsetLoggedInUser(username)\n\t\t\tprops.history.push(\"/posts\")\n\t\t}).catch((error) => {\n\t\t\tconst status = error.response.status\n\t\t\tconsole.log(`An error occurred authenticating: ${error} with status: ${status}`)\t\t\t\n\t\t\tdispatchLoginError({\n\t\t\t\ttype: \"setLoginError\",\n\t\t\t\tdata: \"Authentication failed! Check your username and password\"\n\t\t\t})\n\t\t})\t\t\n\t}\n\n\t// handles logout\n\tfunction handleLogout() {\n\t\tlogoutUser()\n\t\tdispatchLoggedInUser({ \n\t\t\ttype: \"setLoggedInUser\",\n\t\t\tdata:  null \n\t\t})\n\t\tsetLoggedInUser(null)\n\t\treturn <Redirect to=\"/posts\" />\n\t}\n\n\t\n\n\t// Fetches blog posts from server and updates state\n\tfunction fetchBlogPosts() {\n\t\tgetAllBlogPosts().then((response) => {\n\t\t\tconst allPosts = response\n\t\t\tconsole.log(\"all posts from server:\", allPosts)\n\t\t\tdispatchBlogPosts ({\n\t\t\t\ttype: \"setBlogPosts\",\n\t\t\t\tdata: allPosts\n\t\t\t})\t\t\t\n\t\t}).catch((error) => {\n\t\t\tconsole.log(`oops! Something is wrong - check the server. We got an error: ${error}`)\n\t\t})\t\t\n\t}\n\n\tfunction addNewBlogPost(event, props) {\n\t\tevent.preventDefault()\n\t\tconst date = new Date()\n\t\t\n\t\tconst form = event.target\n\t\tconst post = {\n\t\t\ttitle: form.title.value,\n\t\t\tdate: date,\n\t\t\tusername: loggedInUser,\n\t\t\tcategory: form.category.value,\n\t\t\tcontent: form.content.value\n\t\t}\n\t\t// call to server to add blog post\n\t\taddBlogPost(post).then((response) => {\t\t\t\n\t\t\tconst newPost = response\n\t\t\t// update the state\n\t\t\tdispatchBlogPosts({\n\t\t\t\ttype: \"setBlogPosts\",\n\t\t\t\tdata: [...blogPosts, newPost]\n\t\t\t})\n\t\t\tprops.history.push(`/posts/${newPost._id}`)\n\t\t}).catch((error) => {\t\t\t\t\n\t\t\tconsole.log(`An error occurred adding the post: ${error}`)\n\t\t\t\n\t\t})\n\t}\n\n\t// Use reducer hook to handle state items\n\tconst [loggedInUser, dispatchLoggedInUser] = useReducer(stateReducer, null)\n\tconst [blogPosts, dispatchBlogPosts] = useReducer(stateReducer, [])\n\tconst [loginError, dispatchLoginError] = useReducer(stateReducer, null)\n\n\n\t// Use effect hook to initialise component on mount and when blog posts are updated\n\tuseEffect(()=> {\n        // for any initialisation to be performed when component mounts, or on update of state values in the second argument\n\t\tfetchBlogPosts()\n\t\t// If we have login information persisted and we're still logged into the server, set the state\n\t\tuserAuthenticated().then(() => {\t\t\t \n\t\t\tdispatchLoggedInUser({\n\t\t\t\ttype: \"setLoggedInUser\",\n\t\t\t\tdata: getLoggedInUser()\n\t\t\t})\n\t\t}).catch((error) => {\n\t\t\tconsole.log(\"got an error trying to check authenticated user:\", error)\n\t\t\tsetLoggedInUser(null) \n\t\t\tdispatchLoggedInUser({\n\t\t\t\ttype: \"setLoggedInUser\",\n\t\t\t\tdata: null\n\t\t\t})\n\t\t})\n        // return a function that specifies any actions on component unmount\n\t\treturn () => {}\n\t}, [])\n\n\treturn (\n\t\t\n\t\t\t<div className=\"container\">\t\t\t\t\n\t\t\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\n\t\t\t\t\t<Nav loggedInUser={loggedInUser}/>\n\t\t\t\t\t<Title />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\" render ={ () => <Redirect to=\"/posts\" />} />\n\t\t\t\t\t\t<Route exact path=\"/posts/new\" render={(props) => <NewBlogPost {...props} addNewBlogPost={addNewBlogPost} />} />\n\t\t\t\t\t\t<Route exact path=\"/posts/:id\" render ={ (props) => <BlogPosts {...props} blogPosts={blogPosts} loggedInUser={loggedInUser}/> } />\n\t\t\t\t\t\t<Route exact path=\"/posts\" render ={ (props) => <BlogPosts {...props} blogPosts={blogPosts} loggedInUser={loggedInUser}/> } />\n\t\t\t\t\t\t<Route exact path=\"/auth/login\" render={ (props) => <SignIn {...props} handleLogin={handleLogin} loginError={loginError}/> }/>\n\t\t\t\t\t\t<Route exact path=\"/auth/register\" render={ (props) => <RegisterUser {...props} />} />\n\t\t\t\t\t\t<Route exact path=\"/auth/logout\" render={() => handleLogout()} />\n\t\t\t\t\t\t<Route exact path=\"/about\" component={About} />\n\t\t\t\t\t\t<Route component={NotFound} />\n\t\t\t\t\t</Switch>\n\t\t\t\t\n\t\t\t</BrowserRouter>\n\t\t</div>\n\t\t\n\t)\n}\nexport default App","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./components/App\"\nimport \"react-bulma-components/dist/react-bulma-components.min.css\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))"],"sourceRoot":""}